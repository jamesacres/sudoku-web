@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --breakpoint-xl: 90rem;
}

/* Font families for book covers */
.font-orbitron {
  font-family: 'Orbitron', var(--font-orbitron), 'Arial Black', sans-serif;
}

.font-pacifico {
  font-family: 'Pacifico', var(--font-pacifico), cursive;
}

.font-creepster {
  font-family: 'Creepster', fantasy;
}

/* Book cover animations */
@keyframes heatShimmer {
  0% {
    opacity: 0.8;
    transform: translateY(0px);
  }
  100% {
    opacity: 1;
    transform: translateY(-2px);
  }
}

@keyframes iconFloat {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg); 
  }
  50% { 
    transform: translateY(-3px) rotate(2deg); 
  }
}

@keyframes blaze {
  0%, 100% { 
    transform: scale(1); 
    filter: brightness(1); 
  }
  50% { 
    transform: scale(1.1); 
    filter: brightness(1.5); 
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.6s ease-out;
}

.animate-heatShimmer {
  animation: heatShimmer 3s ease-in-out infinite alternate;
}

.animate-iconFloat {
  animation: iconFloat 4s ease-in-out infinite;
}

.animate-blaze {
  animation: blaze 1.5s ease-in-out infinite;
}

/* All month-specific animations */
@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes heartBeat {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.2); }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-8px); }
}

@keyframes sway {
  0%, 100% { transform: rotate(-5deg); }
  50% { transform: rotate(5deg); }
}

@keyframes gentleGlow {
  0%, 100% { transform: scale(1); filter: brightness(1); }
  50% { transform: scale(1.08); filter: brightness(1.2); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); filter: brightness(1); }
  50% { transform: scale(1.15); filter: brightness(1.3); }
}

@keyframes wave {
  0%, 100% { transform: translateX(0px); }
  25% { transform: translateX(3px); }
  75% { transform: translateX(-3px); }
}

@keyframes wiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(2deg); }
  75% { transform: rotate(-2deg); }
}

@keyframes spooky {
  0%, 100% { transform: scale(1) rotate(0deg); }
  25% { transform: scale(1.1) rotate(-5deg); }
  75% { transform: scale(0.9) rotate(5deg); }
}

@keyframes fall {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(5px) rotate(10deg); }
}

@keyframes twinkle {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.7; transform: scale(1.2); }
}

@keyframes aprilShowers {
  0% { opacity: 0.8; transform: translateX(0px); }
  100% { opacity: 1; transform: translateX(-3px); }
}

/* Animation utility classes */
.animate-rotate {
  animation: rotate 4s linear infinite;
  transform-origin: center center;
}

.animate-heartBeat {
  animation: heartBeat 2s ease-in-out infinite;
  transform-origin: center center;
}

.animate-bounce {
  animation: bounce 3s ease-in-out infinite;
}

.animate-sway {
  animation: sway 4s ease-in-out infinite;
}

.animate-gentleGlow {
  animation: gentleGlow 4s ease-in-out infinite;
  transform-origin: center center;
}

.animate-pulse {
  animation: pulse 2s ease-in-out infinite;
  transform-origin: center center;
}

.animate-wave {
  animation: wave 2.5s ease-in-out infinite;
}

.animate-wiggle {
  animation: wiggle 4s ease-in-out infinite;
}

.animate-spooky {
  animation: spooky 3s ease-in-out infinite;
  transform-origin: center center;
}

.animate-fall {
  animation: fall 4s ease-in-out infinite;
}

.animate-twinkle {
  animation: twinkle 2s ease-in-out infinite;
  transform-origin: center center;
}

.animate-aprilShowers {
  animation: aprilShowers 4s ease-in-out infinite alternate;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-stone-200, currentColor);
  }
}

@utility text-balance {
  text-wrap: balance;
}

@utility pt-safe {
  padding-top: max(24px, env(safe-area-inset-top));
}

@utility pb-safe {
  padding-bottom: max(24px, env(safe-area-inset-bottom));
}

/* Theme color variables */
:root {
  --theme-primary: theme(colors.blue.500);
  --theme-primary-dark: theme(colors.blue.600);
  --theme-primary-light: theme(colors.blue.400);
  --theme-primary-lighter: theme(colors.blue.300);
}

.theme-blue {
  --theme-primary: theme(colors.blue.500);
  --theme-primary-dark: theme(colors.blue.600);
  --theme-primary-light: theme(colors.blue.400);
  --theme-primary-lighter: theme(colors.blue.300);
}

.theme-red {
  --theme-primary: theme(colors.red.500);
  --theme-primary-dark: theme(colors.red.600);
  --theme-primary-light: theme(colors.red.400);
  --theme-primary-lighter: theme(colors.red.300);
}

.theme-green {
  --theme-primary: theme(colors.green.500);
  --theme-primary-dark: theme(colors.green.600);
  --theme-primary-light: theme(colors.green.400);
  --theme-primary-lighter: theme(colors.green.300);
}

.theme-purple {
  --theme-primary: theme(colors.purple.500);
  --theme-primary-dark: theme(colors.purple.600);
  --theme-primary-light: theme(colors.purple.400);
  --theme-primary-lighter: theme(colors.purple.300);
}

.theme-amber {
  --theme-primary: theme(colors.amber.500);
  --theme-primary-dark: theme(colors.amber.600);
  --theme-primary-light: theme(colors.amber.400);
  --theme-primary-lighter: theme(colors.amber.300);
}

.theme-cyan {
  --theme-primary: theme(colors.cyan.500);
  --theme-primary-dark: theme(colors.cyan.600);
  --theme-primary-light: theme(colors.cyan.400);
  --theme-primary-lighter: theme(colors.cyan.300);
}

.theme-pink {
  --theme-primary: theme(colors.pink.500);
  --theme-primary-dark: theme(colors.pink.600);
  --theme-primary-light: theme(colors.pink.400);
  --theme-primary-lighter: theme(colors.pink.300);
}

.theme-indigo {
  --theme-primary: theme(colors.indigo.500);
  --theme-primary-dark: theme(colors.indigo.600);
  --theme-primary-light: theme(colors.indigo.400);
  --theme-primary-lighter: theme(colors.indigo.300);
}

.theme-orange {
  --theme-primary: theme(colors.orange.500);
  --theme-primary-dark: theme(colors.orange.600);
  --theme-primary-light: theme(colors.orange.400);
  --theme-primary-lighter: theme(colors.orange.300);
}

.theme-teal {
  --theme-primary: theme(colors.teal.500);
  --theme-primary-dark: theme(colors.teal.600);
  --theme-primary-light: theme(colors.teal.400);
  --theme-primary-lighter: theme(colors.teal.300);
}

.theme-slate {
  --theme-primary: theme(colors.slate.500);
  --theme-primary-dark: theme(colors.slate.600);
  --theme-primary-light: theme(colors.slate.400);
  --theme-primary-lighter: theme(colors.slate.300);
}

.theme-rose {
  --theme-primary: theme(colors.rose.500);
  --theme-primary-dark: theme(colors.rose.600);
  --theme-primary-light: theme(colors.rose.400);
  --theme-primary-lighter: theme(colors.rose.300);
}

.theme-emerald {
  --theme-primary: theme(colors.emerald.500);
  --theme-primary-dark: theme(colors.emerald.600);
  --theme-primary-light: theme(colors.emerald.400);
  --theme-primary-lighter: theme(colors.emerald.300);
}

.theme-sky {
  --theme-primary: theme(colors.sky.500);
  --theme-primary-dark: theme(colors.sky.600);
  --theme-primary-light: theme(colors.sky.400);
  --theme-primary-lighter: theme(colors.sky.300);
}

.theme-violet {
  --theme-primary: theme(colors.violet.500);
  --theme-primary-dark: theme(colors.violet.600);
  --theme-primary-light: theme(colors.violet.400);
  --theme-primary-lighter: theme(colors.violet.300);
}

.theme-lime {
  --theme-primary: theme(colors.lime.500);
  --theme-primary-dark: theme(colors.lime.600);
  --theme-primary-light: theme(colors.lime.400);
  --theme-primary-lighter: theme(colors.lime.300);
}

.theme-fuchsia {
  --theme-primary: theme(colors.fuchsia.500);
  --theme-primary-dark: theme(colors.fuchsia.600);
  --theme-primary-light: theme(colors.fuchsia.400);
  --theme-primary-lighter: theme(colors.fuchsia.300);
}

.theme-yellow {
  --theme-primary: theme(colors.yellow.500);
  --theme-primary-dark: theme(colors.yellow.600);
  --theme-primary-light: theme(colors.yellow.400);
  --theme-primary-lighter: theme(colors.yellow.300);
}

.theme-stone {
  --theme-primary: theme(colors.stone.500);
  --theme-primary-dark: theme(colors.stone.600);
  --theme-primary-light: theme(colors.stone.400);
  --theme-primary-lighter: theme(colors.stone.300);
}

.theme-zinc {
  --theme-primary: theme(colors.zinc.500);
  --theme-primary-dark: theme(colors.zinc.600);
  --theme-primary-light: theme(colors.zinc.400);
  --theme-primary-lighter: theme(colors.zinc.300);
}

/* Add themed utility classes */
@layer utilities {
  .bg-theme-primary {
    background-color: var(--theme-primary);
  }
  .bg-theme-primary-dark {
    background-color: var(--theme-primary-dark);
  }
  .bg-theme-primary-light {
    background-color: var(--theme-primary-light);
  }
  .bg-theme-primary-lighter {
    background-color: var(--theme-primary-lighter);
  }
  
  .text-theme-primary {
    color: var(--theme-primary);
  }
  .text-theme-primary-dark {
    color: var(--theme-primary-dark);
  }
  .text-theme-primary-light {
    color: var(--theme-primary-light);
  }
  
  .border-theme-primary {
    border-color: var(--theme-primary);
  }
  
  .hover\:bg-theme-primary-dark:hover {
    background-color: var(--theme-primary-dark);
  }
}

@layer base {
  body {
    @apply dark:bg-zinc-800 bg-stone-50
  }

  html {
    -webkit-tap-highlight-color: transparent;
    touch-action: pan-y;
  }

  * {
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
}